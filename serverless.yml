service: zik-serverless-nest

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1

package:
  individually: true

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}
    TeamsCacheTable: ${file(resources/TeamsCacheTable.yml):TeamsCacheTable}


functions:
  main:
    handler: src/main.handler
    events:
      - http:
          method: any
          path: /{proxy+}    
    iamRoleStatements:
      - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
      - ${file(iam/TeamsCacheTableIAM.yml):TeamsCacheTableIAM}
    environment:
      REGION: ${self:provider.region}
      TEAMS_CACHE_TABLE_NAME: ${self:custom.TeamsCacheTable.name}
      TEAMS_CACHE_TABLE_INDEX_NAME: ${self:custom.TeamsCacheTable.indexName}
      AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
      FOOTBALL_API_KEY: ${ssm:/${self:custom.base}/football-api-key}


custom:
  base: ${self:service}-${opt:stage,'dev'}
  AuctionsTable:
    name: ${self:custom.base}-auctions-table
    arn: !GetAtt AuctionsTable.Arn
    indexArn: !Join ["/", ["${self:custom.AuctionsTable.arn}", "index/statusAndEndDate"]]
  TeamsCacheTable:
    name: ${self:custom.base}-teams-cache-table
    arn: !GetAtt TeamsCacheTable.Arn
    indexName: TeamNameIndex
    indexArn: !Join ["/", ["${self:custom.TeamsCacheTable.arn}", "${self:custom.TeamsCacheTable.indexName}"]]